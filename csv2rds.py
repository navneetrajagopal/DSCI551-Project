# -*- coding: utf-8 -*-
"""CSV2RDS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QK2Q1513zp7aqC9hhsc__3dQquCyOED9
"""

!pip install pandas
!pip install pymysql
!pip install numpy

import pandas as pd
import pymysql
import numpy as np

#Connect to RDS
rds_host = "database-1.cjc8aikg8tmh.us-east-2.rds.amazonaws.com"
rds_port = 3306
rds_user = "admin"
rds_password = "Dsci-551"
rds_db = "DSCI551"
try:
    conn = pymysql.connect(host=rds_host, port=rds_port, user=rds_user, password=rds_password, database=rds_db)
    cursor = conn.cursor()
    print("Connected")
except pymysql.MySQLError as e:
    print(f"Error: {e}")
    exit()

#Drop existing tables
for table in ['SALE_TRANSACTIONS', 'OWNER_DETAIL', 'PROPERTY_INFO']:
    cursor.execute(f"DROP TABLE IF EXISTS {table};")
conn.commit()
print("Dropped existing tables.")

# Create tables
cursor.execute("""
CREATE TABLE PROPERTY_INFO (
    UniqueID INT PRIMARY KEY,
    ParcelID VARCHAR(255),
    LandUse VARCHAR(255),
    PropertyAddress VARCHAR(255),
    Acreage DECIMAL(10,2),
    TaxDistrict VARCHAR(50),
    YearBuilt INT,
    Bedrooms INT,
    FullBath INT,
    HalfBath INT
);
""")

cursor.execute("""
CREATE TABLE SALE_TRANSACTIONS (
    UniqueID INT,
    SaleDate VARCHAR(255),
    SalePrice DECIMAL(12,2),
    LegalReference VARCHAR(255),
    SoldAsVacant VARCHAR(10),
    FOREIGN KEY (UniqueID) REFERENCES PROPERTY_INFO(UniqueID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
""")

cursor.execute("""
CREATE TABLE OWNER_DETAIL (
    UniqueID INT,
    OwnerName VARCHAR(255),
    OwnerAddress VARCHAR(255),
    LandValue DECIMAL(12,2),
    BuildingValue DECIMAL(12,2),
    TotalValue DECIMAL(12,2),
    FOREIGN KEY (UniqueID) REFERENCES PROPERTY_INFO(UniqueID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
""")

conn.commit()
print("Created PROPERTY_INFO, SALE_TRANSACTIONS, and OWNER_DETAIL tables.")

# read csv
df = pd.read_csv("housing.csv")
df = df.replace({np.nan: None})
df = df.dropna()

# upload data
property_info = df[[
    'UniqueID', 'ParcelID', 'LandUse', 'PropertyAddress', 'Acreage', 'TaxDistrict',
    'YearBuilt', 'Bedrooms', 'FullBath', 'HalfBath'
]]

#property_info = df.drop_duplicates(subset='UniqueID')[[
 #   'UniqueID', 'ParcelID', 'LandUse', 'PropertyAddress', 'Acreage', 'TaxDistrict',
#    'YearBuilt', 'Bedrooms', 'FullBath', 'HalfBath'
#]]
property_tuples = list(property_info.itertuples(index=False, name=None))
cursor.executemany("""
    INSERT INTO PROPERTY_INFO (UniqueID, ParcelID, LandUse, PropertyAddress, Acreage, TaxDistrict,
                               YearBuilt, Bedrooms, FullBath, HalfBath)
    VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
""", property_tuples)

sales = df[['UniqueID', 'SaleDate', 'SalePrice', 'LegalReference', 'SoldAsVacant']]
sales_tuples = list(sales.itertuples(index=False, name=None))
cursor.executemany("""
    INSERT INTO SALE_TRANSACTIONS (UniqueID, SaleDate, SalePrice, LegalReference, SoldAsVacant)
    VALUES (%s, %s, %s, %s, %s)
""", sales_tuples)

owners = df[['UniqueID', 'OwnerName', 'OwnerAddress', 'LandValue', 'BuildingValue', 'TotalValue']]
owners_tuples = list(owners.itertuples(index=False, name=None))
cursor.executemany("""
    INSERT INTO OWNER_DETAIL (UniqueID, OwnerName, OwnerAddress, LandValue, BuildingValue, TotalValue)
    VALUES (%s, %s, %s, %s, %s, %s)
""", owners_tuples)

conn.commit()
print("Successfully inserted data into all tables.")

# end connection
cursor.close()
conn.close()
print("Database connection closed.")